version: '3'

services:

  # Debezium Connect 2.4
  # https://debezium.io/releases/2.4/
  # https://debezium.io/documentation/reference/2.4/connectors/mongodb.html#mongodb-property-capture-mode
  # mongo "mongodb://debeziumtest:debeziumtest@127.0.0.1/debeziumtest?replicaSet=debezium_rs"

  # https://www.mongodb.com/docs/manual/tutorial/enforce-keyfile-access-control-in-existing-replica-set/ 
  # openssl rand -base64 756 > keyfile.txt
  mongodb:
    image: mongo:5.0
    container_name: "mongodb"
    environment:
      - MONGO_DATA_DIR=/data/db
      - MONGO_LOG_DIR=/dev/null
      - MONGO_INITDB_DATABASE=debeziumtest
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin
    volumes:
      - ./deployments/mongo/replica.key:/data/replica.key.devel
      - ./data/db:/data/db
    networks:
      - web
    ports:
      - 27017:27017
    entrypoint:
      - bash
      - -c
      - |
          cp /data/replica.key.devel /data/replica.key
          chmod 400 /data/replica.key
          chown 999:999 /data/replica.key
          exec docker-entrypoint.sh $$@ 
    command: mongod --bind_ip_all --replSet debezium_rs --keyFile /data/replica.key

  mongo-setup:
    image: mongo:5.0
    container_name: mongo_setup
    depends_on:
      - mongodb
    restart: on-failure
    entrypoint: ["/bin/bash", "/scripts/mongo_rs_init.sh"]
    volumes:
      - ./deployments/mongo/mongo_rs_init.sh:/scripts/mongo_rs_init.sh
    networks:
      - web

  # psql --dbname=debeziumtest --username=codebaseuser --password
  postgres:
    working_dir: /usr/app
    volumes:
        - ./data/postgres_data:/var/lib/postgresql/data
    image: 'postgres:11.18-alpine'
    environment:
      POSTGRES_USER: codebaseuser
      POSTGRES_PASSWORD: 12345678
      POSTGRES_DB : debeziumtest
      PG_VERSION: '11.18-alpine'
    ports:
        - "5432:5432"
    networks:
      - web
    
  # https://hub.docker.com/r/debezium/connect
  connect:
    image: debezium/connect-jdbc:${DEBEZIUM_VERSION}
    build:
      context: debezium-jdbc
      args:
        DEBEZIUM_VERSION: ${DEBEZIUM_VERSION}
    ports:
      - 8083:8083
    networks:
      - web
    depends_on:
      - mongodb
      - postgres
    environment:
      - BOOTSTRAP_SERVERS=broker1:9093,broker2:9093,broker3:9093
      - GROUP_ID=DEB_83948
      - CONFIG_STORAGE_TOPIC=my_connect_configs
      - OFFSET_STORAGE_TOPIC=my_connect_offsets
      - STATUS_STORAGE_TOPIC=my_source_connect_statuses
      - ENABLE_DEBEZIUM_SCRIPTING=true
      - CONNECT_SECURITY_PROTOCOL=SASL_PLAINTEXT
      - CONNECT_SASL_MECHANISM=PLAIN
      - CONNECT_SASL_JAAS_CONFIG=org.apache.kafka.common.security.plain.PlainLoginModule required username="admin" password="123456";

      - CONNECT_PRODUCER_SECURITY_PROTOCOL=SASL_PLAINTEXT
      - CONNECT_PRODUCER_SASL_JAAS_CONFIG=org.apache.kafka.common.security.plain.PlainLoginModule required username="admin" password="123456";
      - CONNECT_PRODUCER_SASL_MECHANISM=PLAIN
      - CONNECT_CONSUMER_SECURITY_PROTOCOL=SASL_PLAINTEXT
      - CONNECT_CONSUMER_SASL_JAAS_CONFIG=org.apache.kafka.common.security.plain.PlainLoginModule required username="admin" password="123456";
      - CONNECT_CONSUMER_SASL_MECHANISM=PLAIN
      # - CONNECT_REST_EXTENSION_CLASSES=io.debezium.kcrestextension.DebeziumConnectRestExtension
networks:
  web:
    driver: bridge
